1.급여가 3000 인 사원의 이름, 급여, 입사일을 출력하시오
select ename, sal, hiredate  from emp where sal=3000;

2.커미션 계약을 하지 않은 사원들의 이름, 커미션을 출력하시오 
select ename, comm
from emp 
where comm is not null;

3.30번 부서에서 근무하는 사원들의 이름, 부서번호를 출력 
select ename, deptno
from emp 
where deptno=30;

4.30번 부서에서 근무하는 사원들의 이름, 부서번호,부서명을 출력
정규화에 의해 물리적으로 분리된 테이블을 마치 하나처럼 보여줄
수 있는 select 문을 조인문(join) 이라 한다

select ename, dept.deptno, dname from emp , dept;

위와같이 쿼리문을 실행하면 14명이 아닌 56건의 데이터가 출력된다
그 이유가 무엇인가?  두 테이블을 합쳤기 때문에...
해결책)  합치면서 조건을 부여하자!!!

select ename, d.deptno, dname
from emp e, dept d
where e.deptno=d.deptno
and e.deptno=30;
------------------------------------------------------------------
정규화란? 데이터의 무결성을 위해 테이블을 분리시키는것!!
조인이란? 분리된 테이블을 마치 하나처럼 보여줄수 있는 select 기법

집계함수 
- 총수 count(대상컬럼)
- 평균 avg(대상컬럼)
- 최대 max(대상컬럼)
- 최소 min(대상컬럼)
- 합계 sum(대상컬럼)

alias : 별칭,가칭 ( 실질적으로 존재하지 않는 컬럼)
select count(*) as 총사원수, 
avg(sal) as 평균급여 , 
max(sal) as 최대급여, 
min(sal) as 최소급여 , 
sum(sal) as 급여합
from emp;

group by : 종류별로 묶는 조건 

group by 사용시 주의점
 - group by 절에 명시한 컬럼만이 select 절의 대상이 될수있다..
 - 단, 예외가 있다...group by 의 목적은 통계가 목적이므로, 
   집계함수는 group by절에 명시하지 않더라도 사용이 가능하다..
   왜?? 집계함수는 이미 집계가 되어 있으므로...group by와 친함

select job,count(ename) from emp group by job;
-------------------------------------------------------------------
1.기본쿼리 
2.조건문 (where )
3.조인 (join) 
4.통계시 사용시 사용 (집계함수) 
5.group by 












